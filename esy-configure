#! /usr/bin/env bash

# esy-configure
#
# Wrapper to delegate to configuration to the 
# appropriate `configure` strategy based on the active platform.
#
# Today, OCaml has separate build strategies:
# - Linux, OSX, Cygwin (gcc) - https://github.com/ocaml/ocaml/blob/trunk/INSTALL.adoc
# - Windows, Cygin (mingw) - https://github.com/ocaml/ocaml/blob/trunk/README.win32.adoc
#
# We want `esy` to work cross-platform, so this is a shim script that will delegate to the
# appropriate script depending on the platform. We assume that if the platform is `CYGWIN`
# that the `mingw` (native executable) strategy is desired.

set -u
set -e
set -o pipefail

case "$(uname -s)" in
    CYGWIN*|MINGW32*|MSYS*)
        echo "[esy-configure] Detected windows environment..."
        ./configure-windows "$@"
        ;;
    *)
        echo "[esy-configure] Detected OSX / Linux environment"
        ./configure "$@"
        ;;
esac

# fix related to -fcommon on GCC 10 on Linux
if [ "$(uname)" == 'Linux' ]; then
    VERSION_NEEDED_TO_PATCH="10"

    CC_CONFIG=$(cat Makefile.config | awk -F= '{ if ($1 == "CC") { print $2 } }')
    CC=$(echo $CC_CONFIG | awk '{ print $1 }')

    MAJOR_VERSION=$($CC -dumpversion | awk -F. '{ print $1 }' )

    if [ $MAJOR_VERSION -ge $VERSION_NEEDED_TO_PATCH ]; then
        echo 'OC_CFLAGS:=$(OC_FLAGS) -fcommon' >> Makefile.config
    fi
fi
