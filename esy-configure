#! /bin/bash

# esy-configure
#
# Wrapper to delegate to configuration to the 
# appropriate `configure` strategy based on the active platform.
#
# Today, OCaml has separate build strategies:
# - Linux, OSX, Cygwin (gcc) - https://github.com/ocaml/ocaml/blob/trunk/INSTALL.adoc
# - Windows, Cygin (mingw) - https://github.com/ocaml/ocaml/blob/trunk/README.win32.adoc
#
# We want `esy` to work cross-platform, so this is a shim script that will delegate to the
# appropriate script depending on the platform. We assume that if the platform is `CYGWIN`
# that the `mingw` (native executable) strategy is desired.

set -u
set -e
set -o pipefail

case "$(uname -s)" in
    Darwin)
        echo "[esy-configure] Detected OSX, patching for Xcode 12"
        sed -ib -e "s/opts=\"\"/opts=\"-Wno-implicit-function-declaration\"/" config/auto-aux/hasgot;;
    *)
        true;;
esac

case "$(uname -s)" in
    CYGWIN*|MINGW32*|MSYS*)
        echo "[esy-configure] Detected windows environment..."
        ./configure-windows "$@"
        ;;
    Linux)
        echo "[esy-configure] Detected Linux environment"
	VERSION_NEEDED_TO_PATCH="10"
	MAJOR_VERSION=$(gcc -dumpversion | awk -F. '{ print $1 }' )
	if [ $MAJOR_VERSION -ge $VERSION_NEEDED_TO_PATCH ]; then
	  ./configure "$@" -cc "gcc -fcommon"
	else
	  ./configure "$@"
	fi
	;;
    *)
        echo "[esy-configure] Detected non-Linux (most likely MacOS) environment"
	./configure "$@"
	;;
esac
